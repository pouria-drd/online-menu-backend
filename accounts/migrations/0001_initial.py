# Generated by Django 5.2.5 on 2025-09-17 11:04

import accounts.models.profile_model
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(help_text='Required. 25 characters or fewer. Letters, digits, and _ only.', max_length=25, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_username', message='Only lowercase letters, numbers, and underscores are allowed and must be at most 25 characters long.', regex='^[a-z0-9_]{1,25}$')])),
                ('email', models.EmailField(help_text='Enter a valid email address.', max_length=254, unique=True, validators=[django.core.validators.EmailValidator(code='invalid_email', message='Enter a valid email address.')])),
                ('status', models.CharField(choices=[('active', 'Active'), ('banned', 'Banned'), ('deleted', 'Deleted'), ('inactive', 'Inactive')], db_index=True, default='inactive', max_length=20)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('user', 'User'), ('menu_owner', 'Menu Owner')], db_index=True, default='user', max_length=20)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ProfileModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bio', models.TextField(blank=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], default='other', max_length=10)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=accounts.models.profile_model.avatar_image_upload_to)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'indexes': [models.Index(fields=['user'], name='accounts_pr_user_id_2ab93a_idx')],
            },
        ),
        migrations.CreateModel(
            name='SettingsModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark'), ('system', 'System')], default='system', max_length=10)),
                ('language', models.CharField(choices=[('en', 'English'), ('fa', 'Persian')], default='fa', max_length=20)),
                ('primary_2fa_method', models.CharField(blank=True, choices=[('email', 'Email')], help_text='Primary 2FA method for this user', max_length=20, null=True)),
                ('email_2fa_enabled', models.BooleanField(default=False, help_text='Email-based 2FA is enabled')),
                ('email_verified', models.BooleanField(default=False)),
                ('require_2fa_for_sensitive_actions', models.BooleanField(default=False, help_text='Require 2FA for password changes, account deletion, etc.')),
                ('last_2fa_setup_at', models.DateTimeField(blank=True, help_text='When 2FA was last configured', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Setting',
                'verbose_name_plural': 'User Settings',
                'indexes': [models.Index(fields=['user'], name='accounts_se_user_id_003134_idx'), models.Index(fields=['primary_2fa_method'], name='accounts_se_primary_cd4275_idx')],
            },
        ),
    ]
